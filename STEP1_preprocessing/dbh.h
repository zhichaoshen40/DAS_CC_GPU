
#ifndef _DBH_H_
#define _DBH_H_

#include "complex_sac.h"

void        afr           (float     *sn, 
			   float     *sd, 
			   int        nsects, 
			   char      *type, 
			   char      *sampling, 
			   double     fl, 
			   double     fh, 
			   int        nsamps, 
			   float     *response, 
			   float     *freqs);
void        alias         (float     *x, 
			   int        origin, 
			   int        m, 
			   int        n, 
			   float     *y);
void        append        (char      *line, 
			   int        line_s, 
			   char      *exp, 
			   int        exp_s);
void        autcor        (float     *data, 
			   double     delta, 
			   int        nsamps, 
			   int        nwin, 
			   int        wlen, 
			   char      *type, 
			   char      *stype, 
			   float     *ac, 
			   int       *nfft, 
			   int       *nlags, 
			   char      *err, 
			   int        err_s, 
			   float     *aux, 
			   float      ridge_fac);
void        beroots       (complexf  *p, 
			   char      *rtype, 
			   int        rtype_s, 
			   float     *dcvalue, 
			   int       *nsects, 
			   int        iord);
void        bilin2        (float     *sn, 
			   float     *sd, 
			   int        nsects);
void        buroots       (complexf  *p, 
			   char      *rtype, 
			   int        rtype_s, 
			   float     *dcvalue, 
			   int       *nsects, 
			   int        iord);
void        c1roots       (complexf  *p, 
			   char      *rtype, 
			   int        rtype_s, 
			   float     *dcvalue, 
			   int       *nsects, 
			   int        iord, 
			   double     eps);
void        c2roots       (complexf  *p, 
			   complexf  *z, 
			   char      *rtype, 
			   int        rtype_s, 
			   float     *dcvalue, 
			   int       *nsects, 
			   int        iord, 
			   double     a, 
			   double     omegar);
void        chebparm      (double     a, 
			   double     trbndw, 
			   int        iord, 
			   float     *eps, 
			   float     *ripple);
void        cpolar        (float     *x, 
			   int        nrad, 
			   int        naz, 
			   int        lev, 
			   double     zmin, 
			   double     zmax);
void        crit          (float     *r, 
			   int        n, 
			   float     *x);
void        crscor        (float     *data1, 
			   float     *data2, 
			   int        nsamps, 
			   int        nwin, 
			   int        wlen, 
			   char      *type, 
			   float     *c, 
			   int       *nfft, 
			   char      *err, 
			   int        err_s);
void cross_correlation_normalized(float *data1,
                                  float *data2,
                                  int   *npts_data,
                                  float *xcorr,
                                  int   *npts_xcorr);
void        cutoffs       (float     *sn, 
			   float     *sd, 
			   int        nsects, 
			   double     f);
double      dbh_random    (int *seed);
void        decim         (float     *x, 
			   int        nx, 
			   float     *buf, 
			   int        nb, 
			   float     *c, 
			   int        nchp1, 
			   int        isym, 
			   int        irate, 
			   float     *y, 
			   int       *ny);
void        dfr           (float     *sn,
			   float     *sd, 
			   int        nsects, 
			   char      *type, 
			   int        nsamps, 
			   double     ts, 
			   float     *response);
void        dircor        (float     *data1, 
			   float     *data2, 
			   int        npts, 
			   int        delay, 
			   int        nlags, 
			   double    *c);
void        edecim        (float     *data, 
			   int        ndata, 
			   int        irate, 
			   float     *ddata, 
			   int       *nddata, 
			   float     *c, 
			   int        nc, 
			   int        isym);
void        fft           (float     *xreal, 
			   float     *ximag, 
			   int        n, 
			   int        idir);
void        firtrn        (char      *ftype, 
			   float     *x, 
			   int        n, 
			   float     *buffer, 
			   float     *y);
void        gauss         (int       *seed, 
			   float     *v1, 
			   float     *v2);
void        getResponse   (float     *array, 
			   int        order, 
			   float      gain ,
			   char      *kprefix, 
			   int       *nerr);
void        iirfilter     (float     *data, 
			   int        nsamples, 
			   float     *a, 
			   float     *sn, 
			   float     *sd, 
			   int        nsects, 
			   float     *states, 
			   float     *fdata);
void        inspect       (int        iord, 
			   char      *type, 
			   char      *aproto, 
			   double     att, 
			   double     trbndw, 
			   double     fl, 
			   double     fh, 
			   double     ts, 
			   char      *rtype, 
			   int        nfreqs, 
			   float     *rfl, 
			   float     *rfh, 
			   char      *sampling, 
			   float     *response, 
			   float     *freqs);
void        levin         (float    *r, 
			   float    *a, 
			   float    *reflct, 
			   int       n);
void        levinD        (double   *r, 
			   float    *a, 
			   float    *reflct, 
			   int       n);
void        lp            (complexf *p, 
			   complexf *z, 
			   char     *rtype, 
			   int       rtype_s, 
			   double    dcvalue, 
			   int       nsects, 
			   float    *sn, 
			   float    *sd);
void        lptbp         (complexf *p, 
			   complexf *z, 
			   char     *rtype, 
			   int       rtype_s, 
			   double    dcvalue, 
			   int      *nsects, 
			   double    fl, 
			   double    fh, 
			   float    *sn, 
			   float    *sd );
void        lptbr         (complexf *p, 
			   complexf *z, 
			   char     *rtype, 
			   int       rtype_s, 
			   double    dcvalue, 
			   int      *nsects, 
			   double    fl, 
			   double    fh, 
			   float    *sn, 
			   float    *sd);
void        lpthp         (complexf *p, 
			   complexf *z, 
			   char     *rtype, 
			   int       rtype_s, 
			   double    dcvalue, 
			   int       nsects, 
			   float    *sn, 
			   float    *sd);
void        mem           (float    *r, 
			   int       n, 
			   int       nfft, 
			   float    *spect, 
			   char     *errmsg, 
			   int       errmsg_s, 
			   float    *aux);
void        mlm           (float    *r, 
			   int       n, 
			   int       nfft, 
			   float    *spect, 
			   char     *errmsg, 
			   int       errmsg_s, 
			   float    *aux);
void        overlp        (float    *input, 
			   int       npts, 
			   float    *output, 
			   float    *c, 
			   int       nc, 
			   int       nfft, 
			   float    *buffer, 
			   float    *cbuff);
void        pds           (float    *r, 
			   int       nr, 
			   int       nlags, 
			   int      *wlen, 
			   char     *wtype, 
			   int       nfft, 
			   float    *spectr, 
			   char     *errmsg, 
			   int       errmsg_s, 
			   float    *tempor);
void        pef           (float    *data, 
			   int       npts, 
			   float    *a, 
			   int       nc, 
			   int       delay, 
			   double    mu, 
			   float    *result, 
			   char     *errmsg);
void        phaseshift    (float    *input, 
			   int       nsamples, 
			   float    *output1, 
			   float    *output2, 
			   float    *states);
void        pltplr        (float    *s, 
			   int       naz, 
			   int       ninc, 
			   int       levels, 
			   char     *scalng, 
			   int       lprint, 
			   char     *label, 
			   int       label_s, 
			   char     *title, 
			   int       title_s);
double      rms           (float    *x, 
			   int       nsamps);
void        shift         (float    *x, 
			   int       n, 
			   int       ishft, 
			   char     *type, 
			   float    *y, 
			   char     *errmsg, 
			   int       errmsg_s);
void        spectr        (float    *r, 
			   int       nrsize, 
			   int       nlags, 
			   char     *etype, 
			   int      *order, 
			   int       nfft, 
			   char     *wtype, 
			   float    *a, 
			   int       aorder, 
			   float    *s, 
			   char     *errmsg, 
			   int       errmsg_s, 
			   float    *aux);
void        step          (float    *r, 
			   float    *a, 
			   float    *b, 
			   float    *c, 
			   int       n);
void        unit          (float    *r, 
			   float    *a, 
			   int       n);
double      warp          (double    f, 
			   double    ts);
void        wiener        (float    *data, 
			   int       nsamps, 
			   int       start, 
			   int       wlen, 
			   int       nc, 
			   int       lmu, 
			   double    mu, 
			   int       lepsilon, 
			   double    epsilon, 
			   float    *fdata, 
			   int      *ierr);
void        window        (float    *x, 
			   int       n, 
			   char     *type, 
			   int       fsamp, 
			   int       wlen, 
			   float    *y, 
			   char     *err, 
			   int       err_s);
void        winmov        (float    *data, 
			   int       wlen, 
			   float    *w,
			   float    *wdata);
void        xapiir        (float    *data, 
			   int       nsamps, 
			   char     *aproto, 
			   double    trbndw, 
			   double    a, 
			   int       iord, 
			   char     *type, 
			   double    flo, 
			   double    fhi, 
			   double    ts, 
			   int       passes);
void        zshft         (float    *signal, 
			   int       n, 
			   int       ishft);
void        zero          (float    *a, 
			   int       n);


void ceigvv ( int nd, 
              int n, 
              complexf *a, 
              float *e, 
              complexf *z, 
              int *ierr);

#endif /* _DBH_H_ */
